name: run test cases

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  testing:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, ubuntu-24.04-arm]
        compiler: [gcc, clang]

    runs-on: ${{ matrix.os }}

    env:
      CC: ${{ matrix.compiler }}

    steps:
    - uses: actions/checkout@v4
    - name: install bats
      run: |
        curl -L -o bats-core-1.2.1.tar.gz https://github.com/bats-core/bats-core/archive/v1.2.1.tar.gz
        tar zxvf bats-core-1.2.1.tar.gz
        cd bats-core-1.2.1 &&
        sudo ./install.sh /usr/local
    - name: install uncrustify X64
      if: $runner.arch = "X64"
      run: |
        curl -LO http://launchpadlibrarian.net/516341795/uncrustify_0.72.0+dfsg1-2_amd64.deb
        sudo dpkg -i uncrustify_0.72.0+dfsg1-2_amd64.deb || true
    - name: install uncrustify ARM64
      if: $runner.arch = "ARM64"
      run: |
        curl -LO http://launchpadlibrarian.net/516341795/uncrustify_0.72.0+dfsg1-2_arm64.deb
        sudo dpkg -i uncrustify_0.72.0+dfsg1-2_arm64.deb || true
    - name: build packcc
      run: |
        (
        mkdir -p build
        cd build
        cmake -DCMAKE_C_COMPILER=$CC ..
        cmake --build . --config Debug --target check --clean-first
        cmake --build . --config Release --target check --clean-first
        )
